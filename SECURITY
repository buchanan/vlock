OVERVIEW
========

vlock is a denial of service tool.  The default installation is insecure in the
way that it allows any user logged into the machine, even remotely, to lock the
machine completely.  If you have a notion of trusted users it is possible to
set the VLOCK_GROUP variable while installing vlock like so:

  make VLOCK_GROUP=vlock install

This way only members of the vlock group will be able to lock the machine
completely.  Others will still be able to lock their own console or terminal.

Another possibility is to install vlock with the VLOCK_GROUP set to root and
only allow use of vlock through tools like sudo.  This approach, however, does
not bring much advantage over the previous group based one.

In the future the offending tools, vlock-new and vlock-all, may also be
optionally protected through PAM.

vlock-nosysrq is not considered here because enabling it on a machine where
potentially untrusted have access is bad security anyways.

DETAILS
=======

vlock-new
---------

This tool allows any user to run an arbitrary program on a new console.  It is
similar to openvt(1) but much simpler.  The user does not have to be logged in
locally.  This is a slight security problem on its own but it becomes even
bigger if the program run on the new console is vlock-all.

To access the new virtual console vlock-new needs permissions on /dev/ttyXX. It
is therefore recommended to install vlock-new as a setuid-root program.

vlock-all
----------

This tool allows any user to run an arbitrary program while console switching
is disabled.  This only works when run on a virtual console as is the case when
run through vlock-new.

To lock console switching vlock-all needs CAP_SYS_TTY_CONFIG.  It is therefore
recommended to install vlock-all as a setuid-root program.
